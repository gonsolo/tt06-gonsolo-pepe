// Generated by CIRCT firtool-1.37.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module MulFullRawFN(	// <stdin>:3:10
  input         io_a_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_a_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_a_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_a_sign,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  input  [9:0]  io_a_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  input  [24:0] io_a_sig,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  input         io_b_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_b_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_b_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_b_sign,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  input  [9:0]  io_b_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  input  [24:0] io_b_sig,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  output        io_invalidExc,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_rawOut_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_rawOut_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_rawOut_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
                io_rawOut_sign,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  output [9:0]  io_rawOut_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:49:16
  output [47:0] io_rawOut_sig	// hardfloat/src/main/scala/MulRecFN.scala:49:16
);

  assign io_invalidExc =
    io_a_isNaN & ~(io_a_sig[22]) | io_b_isNaN & ~(io_b_sig[22]) | io_a_isInf & io_b_isZero
    | io_a_isZero & io_b_isInf;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:58:{44,76}, :66:71, hardfloat/src/main/scala/common.scala:82:{46,49,56}
  assign io_rawOut_isNaN = io_a_isNaN | io_b_isNaN;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:70:35
  assign io_rawOut_isInf = io_a_isInf | io_b_isInf;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:59:38
  assign io_rawOut_isZero = io_a_isZero | io_b_isZero;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:60:40
  assign io_rawOut_sign = io_a_sign ^ io_b_sign;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:61:36
  assign io_rawOut_sExp = io_a_sExp + io_b_sExp - 10'h100;	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:62:48
  assign io_rawOut_sig = {23'h0, io_a_sig} * {23'h0, io_b_sig};	// <stdin>:3:10, hardfloat/src/main/scala/MulRecFN.scala:63:35
endmodule

module MulRawFN(	// <stdin>:37:10
  input         io_a_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_a_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_a_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_a_sign,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  input  [9:0]  io_a_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  input  [24:0] io_a_sig,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  input         io_b_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_b_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_b_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_b_sign,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  input  [9:0]  io_b_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  input  [24:0] io_b_sig,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  output        io_invalidExc,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_rawOut_isNaN,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_rawOut_isInf,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_rawOut_isZero,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
                io_rawOut_sign,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  output [9:0]  io_rawOut_sExp,	// hardfloat/src/main/scala/MulRecFN.scala:77:16
  output [26:0] io_rawOut_sig	// hardfloat/src/main/scala/MulRecFN.scala:77:16
);

  wire [47:0] _mulFullRaw_io_rawOut_sig;	// hardfloat/src/main/scala/MulRecFN.scala:84:28
  MulFullRawFN mulFullRaw (	// hardfloat/src/main/scala/MulRecFN.scala:84:28
    .io_a_isNaN       (io_a_isNaN),
    .io_a_isInf       (io_a_isInf),
    .io_a_isZero      (io_a_isZero),
    .io_a_sign        (io_a_sign),
    .io_a_sExp        (io_a_sExp),
    .io_a_sig         (io_a_sig),
    .io_b_isNaN       (io_b_isNaN),
    .io_b_isInf       (io_b_isInf),
    .io_b_isZero      (io_b_isZero),
    .io_b_sign        (io_b_sign),
    .io_b_sExp        (io_b_sExp),
    .io_b_sig         (io_b_sig),
    .io_invalidExc    (io_invalidExc),
    .io_rawOut_isNaN  (io_rawOut_isNaN),
    .io_rawOut_isInf  (io_rawOut_isInf),
    .io_rawOut_isZero (io_rawOut_isZero),
    .io_rawOut_sign   (io_rawOut_sign),
    .io_rawOut_sExp   (io_rawOut_sExp),
    .io_rawOut_sig    (_mulFullRaw_io_rawOut_sig)
  );
  assign io_rawOut_sig =
    {_mulFullRaw_io_rawOut_sig[47:22], |(_mulFullRaw_io_rawOut_sig[21:0])};	// <stdin>:37:10, hardfloat/src/main/scala/MulRecFN.scala:84:28, :93:{10,15,37,55}
endmodule

module RoundAnyRawFNToRecFN(	// <stdin>:61:10
  input         io_invalidExc,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
                io_in_isNaN,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
                io_in_isInf,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
                io_in_isZero,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
                io_in_sign,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
  input  [9:0]  io_in_sExp,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
  input  [26:0] io_in_sig,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
  output [32:0] io_out	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16
);

  wire [8:0]  _roundMask_T_1 = ~(io_in_sExp[8:0]);	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:155:37, hardfloat/src/main/scala/primitives.scala:52:21
  wire [64:0] _GEN = {59'h0, _roundMask_T_1[5:0]};	// hardfloat/src/main/scala/primitives.scala:52:21, :59:26, :76:56
  wire [64:0] roundMask_shift = $signed(65'sh10000000000000000 >>> _GEN);	// hardfloat/src/main/scala/primitives.scala:76:56
  wire [64:0] roundMask_shift_1 = $signed(65'sh10000000000000000 >>> _GEN);	// hardfloat/src/main/scala/primitives.scala:76:56
  wire [24:0] _roundMask_T_73 =
    _roundMask_T_1[8]
      ? (_roundMask_T_1[7]
           ? {~(_roundMask_T_1[6]
                  ? 22'h0
                  : ~{roundMask_shift[42],
                      roundMask_shift[43],
                      roundMask_shift[44],
                      roundMask_shift[45],
                      roundMask_shift[46],
                      {{roundMask_shift[47:46], roundMask_shift[49]} & 3'h5, 1'h0}
                        | {roundMask_shift[49:48], roundMask_shift[51:50]} & 4'h5,
                      roundMask_shift[51],
                      roundMask_shift[52],
                      roundMask_shift[53],
                      roundMask_shift[54],
                      roundMask_shift[55],
                      roundMask_shift[56],
                      roundMask_shift[57],
                      roundMask_shift[58],
                      roundMask_shift[59],
                      roundMask_shift[60],
                      roundMask_shift[61],
                      roundMask_shift[62],
                      roundMask_shift[63]}),
              3'h7}
           : {22'h0,
              _roundMask_T_1[6]
                ? {roundMask_shift_1[0], roundMask_shift_1[1], roundMask_shift_1[2]}
                : 3'h0})
      : 25'h0;	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16, hardfloat/src/main/scala/primitives.scala:52:21, :58:25, :59:26, :62:24, :67:24, :68:58, :73:{17,21,32}, :76:56, :77:20, :78:22
  wire        _GEN_0 = _roundMask_T_73[0] | io_in_sig[26];	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:119:57, :158:23, hardfloat/src/main/scala/primitives.scala:62:24
  wire [25:0] _GEN_1 = {_roundMask_T_73[24:1], _GEN_0, 1'h1};	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:158:{23,42}, :242:60, hardfloat/src/main/scala/primitives.scala:62:24
  wire [25:0] _GEN_2 =
    io_in_sig[26:1] & {1'h1, ~(_roundMask_T_73[24:1]), ~_GEN_0} & _GEN_1;	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16, :158:{23,42}, :161:53, :162:28, :163:40, :242:60, hardfloat/src/main/scala/primitives.scala:62:24
  wire [25:0] roundedSig =
    (|_GEN_2)
      ? {1'h0, io_in_sig[26:2] | {_roundMask_T_73[24:1], _GEN_0}} + 26'h1
        & ~((|_GEN_2) & (io_in_sig[25:0] & _GEN_1) == 26'h0
              ? {_roundMask_T_73[24:1], _GEN_0, 1'h1}
              : 26'h0)
      : {1'h0, io_in_sig[26:2] & {~(_roundMask_T_73[24:1]), ~_GEN_0}};	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:57:16, :158:{23,42}, :162:28, :163:{40,56}, :164:{42,62}, :172:16, :173:{32,49,57}, :174:{21,25,64}, :176:35, :179:{30,47}, :180:24, :242:60, hardfloat/src/main/scala/primitives.scala:62:24
  wire [10:0] sRoundedExp = {io_in_sExp[9], io_in_sExp} + {9'h0, roundedSig[25:24]};	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:172:16, :184:{40,54}, :272:16
  wire        common_totalUnderflow = $signed(sRoundedExp) < 11'sh6B;	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:184:40, :199:31
  wire        isNaNOut = io_invalidExc | io_in_isNaN;	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:234:34
  wire        notNaN_isInfOut =
    io_in_isInf | ~isNaNOut & ~io_in_isInf & ~io_in_isZero
    & $signed(sRoundedExp[10:7]) > 4'sh2;	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:184:40, :195:{30,50}, :234:34, :236:{22,36,64}, :237:32, :247:32
  assign io_out =
    {~isNaNOut & io_in_sign,
     sRoundedExp[8:0] & ~(io_in_isZero | common_totalUnderflow ? 9'h1C0 : 9'h0)
       & {2'h3, ~notNaN_isInfOut, 6'h3F} | (notNaN_isInfOut ? 9'h180 : 9'h0)
       | (isNaNOut ? 9'h1C0 : 9'h0),
     isNaNOut | io_in_isZero | common_totalUnderflow
       ? {isNaNOut, 22'h0}
       : io_in_sig[26] ? roundedSig[23:1] : roundedSig[22:0]};	// <stdin>:61:10, hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:119:57, :158:42, :172:16, :184:40, :186:37, :188:16, :189:27, :190:27, :199:31, :234:34, :247:32, :249:22, :252:{14,18,32}, :263:17, :264:{14,18}, :272:16, :276:{16,73}, :277:16, :279:{12,38}, :280:16, :285:33, hardfloat/src/main/scala/primitives.scala:73:21
endmodule

module RoundRawFNToRecFN(	// <stdin>:309:10
  input         io_invalidExc,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
                io_in_isNaN,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
                io_in_isInf,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
                io_in_isZero,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
                io_in_sign,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
  input  [9:0]  io_in_sExp,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
  input  [26:0] io_in_sig,	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
  output [32:0] io_out	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:297:16
);

  RoundAnyRawFNToRecFN roundAnyRawFNToRecFN (	// hardfloat/src/main/scala/RoundAnyRawFNToRecFN.scala:308:15
    .io_invalidExc (io_invalidExc),
    .io_in_isNaN   (io_in_isNaN),
    .io_in_isInf   (io_in_isInf),
    .io_in_isZero  (io_in_isZero),
    .io_in_sign    (io_in_sign),
    .io_in_sExp    (io_in_sExp),
    .io_in_sig     (io_in_sig),
    .io_out        (io_out)
  );
endmodule

module MulRecFN(	// <stdin>:326:10
  input  [32:0] io_a,	// hardfloat/src/main/scala/MulRecFN.scala:102:16
                io_b,	// hardfloat/src/main/scala/MulRecFN.scala:102:16
  output [32:0] io_out	// hardfloat/src/main/scala/MulRecFN.scala:102:16
);

  wire        _mulRawFN_io_invalidExc;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire        _mulRawFN_io_rawOut_isNaN;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire        _mulRawFN_io_rawOut_isInf;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire        _mulRawFN_io_rawOut_isZero;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire        _mulRawFN_io_rawOut_sign;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire [9:0]  _mulRawFN_io_rawOut_sExp;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  wire [26:0] _mulRawFN_io_rawOut_sig;	// hardfloat/src/main/scala/MulRecFN.scala:113:26
  MulRawFN mulRawFN (	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_a_isNaN       ((&(io_a[31:30])) & io_a[29]),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}
    .io_a_isInf       ((&(io_a[31:30])) & ~(io_a[29])),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}
    .io_a_isZero      (~(|(io_a[31:29]))),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}
    .io_a_sign        (io_a[32]),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25
    .io_a_sExp        ({1'h0, io_a[31:23]}),	// hardfloat/src/main/scala/MulRecFN.scala:102:16, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :60:27
    .io_a_sig         ({1'h0, |(io_a[31:29]), io_a[22:0]}),	// hardfloat/src/main/scala/MulRecFN.scala:102:16, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :61:{44,49}
    .io_b_isNaN       ((&(io_b[31:30])) & io_b[29]),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}
    .io_b_isInf       ((&(io_b[31:30])) & ~(io_b[29])),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}
    .io_b_isZero      (~(|(io_b[31:29]))),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}
    .io_b_sign        (io_b[32]),	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25
    .io_b_sExp        ({1'h0, io_b[31:23]}),	// hardfloat/src/main/scala/MulRecFN.scala:102:16, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :60:27
    .io_b_sig         ({1'h0, |(io_b[31:29]), io_b[22:0]}),	// hardfloat/src/main/scala/MulRecFN.scala:102:16, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :61:{44,49}
    .io_invalidExc    (_mulRawFN_io_invalidExc),
    .io_rawOut_isNaN  (_mulRawFN_io_rawOut_isNaN),
    .io_rawOut_isInf  (_mulRawFN_io_rawOut_isInf),
    .io_rawOut_isZero (_mulRawFN_io_rawOut_isZero),
    .io_rawOut_sign   (_mulRawFN_io_rawOut_sign),
    .io_rawOut_sExp   (_mulRawFN_io_rawOut_sExp),
    .io_rawOut_sig    (_mulRawFN_io_rawOut_sig)
  );
  RoundRawFNToRecFN roundRawFNToRecFN (	// hardfloat/src/main/scala/MulRecFN.scala:121:15
    .io_invalidExc (_mulRawFN_io_invalidExc),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_isNaN   (_mulRawFN_io_rawOut_isNaN),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_isInf   (_mulRawFN_io_rawOut_isInf),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_isZero  (_mulRawFN_io_rawOut_isZero),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_sign    (_mulRawFN_io_rawOut_sign),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_sExp    (_mulRawFN_io_rawOut_sExp),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_in_sig     (_mulRawFN_io_rawOut_sig),	// hardfloat/src/main/scala/MulRecFN.scala:113:26
    .io_out        (io_out)
  );
endmodule

module Multiply(	// <stdin>:402:10
  input         clock,	// <stdin>:403:11
                reset,	// <stdin>:404:11
  input  [31:0] io_a_bits,	// src/main/scala/bsdf/Multiply.scala:24:14
                io_b_bits,	// src/main/scala/bsdf/Multiply.scala:24:14
  output        io_out_valid,	// src/main/scala/bsdf/Multiply.scala:24:14
  output [31:0] io_out_bits	// src/main/scala/bsdf/Multiply.scala:24:14
);

  wire [32:0] _mul_io_out;	// src/main/scala/bsdf/Multiply.scala:30:19
  reg         busy;	// src/main/scala/bsdf/Multiply.scala:18:21
  reg  [31:0] a;	// src/main/scala/bsdf/Multiply.scala:21:14
  reg  [31:0] b;	// src/main/scala/bsdf/Multiply.scala:22:14
  wire        mul_io_a_rawIn_isZeroExpIn = a[30:23] == 8'h0;	// hardfloat/src/main/scala/fNFromRecFN.scala:60:21, hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, src/main/scala/bsdf/Multiply.scala:21:14
  wire [4:0]  mul_io_a_rawIn_normDist =
    a[22]
      ? 5'h0
      : a[21]
          ? 5'h1
          : a[20]
              ? 5'h2
              : a[19]
                  ? 5'h3
                  : a[18]
                      ? 5'h4
                      : a[17]
                          ? 5'h5
                          : a[16]
                              ? 5'h6
                              : a[15]
                                  ? 5'h7
                                  : a[14]
                                      ? 5'h8
                                      : a[13]
                                          ? 5'h9
                                          : a[12]
                                              ? 5'hA
                                              : a[11]
                                                  ? 5'hB
                                                  : a[10]
                                                      ? 5'hC
                                                      : a[9]
                                                          ? 5'hD
                                                          : a[8]
                                                              ? 5'hE
                                                              : a[7]
                                                                  ? 5'hF
                                                                  : a[6]
                                                                      ? 5'h10
                                                                      : a[5]
                                                                          ? 5'h11
                                                                          : a[4]
                                                                              ? 5'h12
                                                                              : a[3]
                                                                                  ? 5'h13
                                                                                  : a[2]
                                                                                      ? 5'h14
                                                                                      : a[1]
                                                                                          ? 5'h15
                                                                                          : 5'h16;	// hardfloat/src/main/scala/primitives.scala:91:52, hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/bsdf/Multiply.scala:21:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [53:0] _mul_io_a_rawIn_subnormFract_T =
    {31'h0, a[22:0]} << mul_io_a_rawIn_normDist;	// hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :52:33, src/main/scala/bsdf/Multiply.scala:21:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [8:0]  mul_io_a_rawIn_adjustedExp =
    (mul_io_a_rawIn_isZeroExpIn ? {4'hF, ~mul_io_a_rawIn_normDist} : {1'h0, a[30:23]})
    + {7'h20, mul_io_a_rawIn_isZeroExpIn ? 2'h2 : 2'h1};	// hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, :54:10, :55:18, :57:9, :58:14, src/main/scala/bsdf/Multiply.scala:18:21, :21:14, :46:24, :47:12, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [2:0]  _mul_io_a_T_1 =
    mul_io_a_rawIn_isZeroExpIn & ~(|(a[22:0])) ? 3'h0 : mul_io_a_rawIn_adjustedExp[8:6];	// hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :48:30, :49:34, :57:9, :60:30, hardfloat/src/main/scala/recFNFromFN.scala:48:{15,50}, src/main/scala/bsdf/Multiply.scala:21:14
  wire        mul_io_b_rawIn_isZeroExpIn = b[30:23] == 8'h0;	// hardfloat/src/main/scala/fNFromRecFN.scala:60:21, hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, src/main/scala/bsdf/Multiply.scala:22:14
  wire [4:0]  mul_io_b_rawIn_normDist =
    b[22]
      ? 5'h0
      : b[21]
          ? 5'h1
          : b[20]
              ? 5'h2
              : b[19]
                  ? 5'h3
                  : b[18]
                      ? 5'h4
                      : b[17]
                          ? 5'h5
                          : b[16]
                              ? 5'h6
                              : b[15]
                                  ? 5'h7
                                  : b[14]
                                      ? 5'h8
                                      : b[13]
                                          ? 5'h9
                                          : b[12]
                                              ? 5'hA
                                              : b[11]
                                                  ? 5'hB
                                                  : b[10]
                                                      ? 5'hC
                                                      : b[9]
                                                          ? 5'hD
                                                          : b[8]
                                                              ? 5'hE
                                                              : b[7]
                                                                  ? 5'hF
                                                                  : b[6]
                                                                      ? 5'h10
                                                                      : b[5]
                                                                          ? 5'h11
                                                                          : b[4]
                                                                              ? 5'h12
                                                                              : b[3]
                                                                                  ? 5'h13
                                                                                  : b[2]
                                                                                      ? 5'h14
                                                                                      : b[1]
                                                                                          ? 5'h15
                                                                                          : 5'h16;	// hardfloat/src/main/scala/primitives.scala:91:52, hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, src/main/scala/bsdf/Multiply.scala:22:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [53:0] _mul_io_b_rawIn_subnormFract_T =
    {31'h0, b[22:0]} << mul_io_b_rawIn_normDist;	// hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :52:33, src/main/scala/bsdf/Multiply.scala:22:14, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [8:0]  mul_io_b_rawIn_adjustedExp =
    (mul_io_b_rawIn_isZeroExpIn ? {4'hF, ~mul_io_b_rawIn_normDist} : {1'h0, b[30:23]})
    + {7'h20, mul_io_b_rawIn_isZeroExpIn ? 2'h2 : 2'h1};	// hardfloat/src/main/scala/rawFloatFromFN.scala:45:19, :48:30, :54:10, :55:18, :57:9, :58:14, src/main/scala/bsdf/Multiply.scala:18:21, :22:14, :46:24, :47:12, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [2:0]  _mul_io_b_T_1 =
    mul_io_b_rawIn_isZeroExpIn & ~(|(b[22:0])) ? 3'h0 : mul_io_b_rawIn_adjustedExp[8:6];	// hardfloat/src/main/scala/rawFloatFromFN.scala:46:21, :48:30, :49:34, :57:9, :60:30, hardfloat/src/main/scala/recFNFromFN.scala:48:{15,50}, src/main/scala/bsdf/Multiply.scala:22:14
  reg  [31:0] out;	// src/main/scala/bsdf/Multiply.scala:42:22
  wire        out_rawIn_isInf = (&(_mul_io_out[31:30])) & ~(_mul_io_out[29]);	// hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}, src/main/scala/bsdf/Multiply.scala:30:19
  wire        out_isSubnormal = $signed({1'h0, _mul_io_out[31:23]}) < 10'sh82;	// hardfloat/src/main/scala/fNFromRecFN.scala:51:38, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :60:27, src/main/scala/bsdf/Multiply.scala:18:21, :30:19, :46:24, :47:12
  wire [23:0] _out_denormFract_T_1 =
    {1'h0, |(_mul_io_out[31:29]), _mul_io_out[22:1]} >> 5'h1 - _mul_io_out[27:23];	// hardfloat/src/main/scala/fNFromRecFN.scala:52:{35,47}, :53:{38,42}, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, src/main/scala/bsdf/Multiply.scala:18:21, :30:19, :46:24, :47:12, src/main/scala/chisel3/util/Mux.scala:50:70
  always @(posedge clock) begin	// <stdin>:403:11
    if (reset)	// <stdin>:403:11
      busy <= 1'h0;	// src/main/scala/bsdf/Multiply.scala:18:21, :46:24, :47:12
    else	// <stdin>:403:11
      busy <= ~busy;	// src/main/scala/bsdf/Multiply.scala:18:21, :24:14, :39:14, :46:24, :47:12, :50:36
    if (busy) begin	// src/main/scala/bsdf/Multiply.scala:18:21
    end
    else begin	// src/main/scala/bsdf/Multiply.scala:18:21
      a <= io_a_bits;	// src/main/scala/bsdf/Multiply.scala:21:14
      b <= io_b_bits;	// src/main/scala/bsdf/Multiply.scala:22:14
    end
    out <=
      {_mul_io_out[32],
       (out_isSubnormal ? 8'h0 : _mul_io_out[30:23] + 8'h7F)
         | {8{(&(_mul_io_out[31:30])) & _mul_io_out[29] | out_rawIn_isInf}},
       out_isSubnormal
         ? _out_denormFract_T_1[22:0]
         : out_rawIn_isInf ? 23'h0 : _mul_io_out[22:0]};	// hardfloat/src/main/scala/fNFromRecFN.scala:51:38, :53:{42,60}, :56:16, :58:{27,45}, :60:{15,21,44}, :62:16, :64:20, :66:12, hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}, :57:33, :59:25, :61:49, src/main/scala/bsdf/Multiply.scala:30:19, :42:22
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:402:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:402:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:402:10
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;	// <stdin>:402:10
    logic [31:0] _RANDOM_1;	// <stdin>:402:10
    logic [31:0] _RANDOM_2;	// <stdin>:402:10
    logic [31:0] _RANDOM_3;	// <stdin>:402:10
    initial begin	// <stdin>:402:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:402:10
        `INIT_RANDOM_PROLOG_	// <stdin>:402:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:402:10
        _RANDOM_0 = `RANDOM;	// <stdin>:402:10
        _RANDOM_1 = `RANDOM;	// <stdin>:402:10
        _RANDOM_2 = `RANDOM;	// <stdin>:402:10
        _RANDOM_3 = `RANDOM;	// <stdin>:402:10
        busy = _RANDOM_0[0];	// src/main/scala/bsdf/Multiply.scala:18:21
        a = {_RANDOM_0[31:1], _RANDOM_1[0]};	// src/main/scala/bsdf/Multiply.scala:18:21, :21:14
        b = {_RANDOM_1[31:1], _RANDOM_2[0]};	// src/main/scala/bsdf/Multiply.scala:21:14, :22:14
        out = {_RANDOM_2[31:1], _RANDOM_3[0]};	// src/main/scala/bsdf/Multiply.scala:22:14, :42:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:402:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:402:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  MulRecFN mul (	// src/main/scala/bsdf/Multiply.scala:30:19
    .io_a
      ({a[31],
        _mul_io_a_T_1[2:1],
        _mul_io_a_T_1[0] | (&(mul_io_a_rawIn_adjustedExp[8:7])) & (|(a[22:0])),
        mul_io_a_rawIn_adjustedExp[5:0],
        mul_io_a_rawIn_isZeroExpIn
          ? {_mul_io_a_rawIn_subnormFract_T[21:0], 1'h0}
          : a[22:0]}),	// hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, :46:21, :48:30, :49:34, :52:{33,46,64}, :57:9, :61:{32,57}, :64:28, :70:33, hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, :50:{23,41}, src/main/scala/bsdf/Multiply.scala:18:21, :21:14, :46:24, :47:12
    .io_b
      ({b[31],
        _mul_io_b_T_1[2:1],
        _mul_io_b_T_1[0] | (&(mul_io_b_rawIn_adjustedExp[8:7])) & (|(b[22:0])),
        mul_io_b_rawIn_adjustedExp[5:0],
        mul_io_b_rawIn_isZeroExpIn
          ? {_mul_io_b_rawIn_subnormFract_T[21:0], 1'h0}
          : b[22:0]}),	// hardfloat/src/main/scala/rawFloatFromFN.scala:44:18, :46:21, :48:30, :49:34, :52:{33,46,64}, :57:9, :61:{32,57}, :64:28, :70:33, hardfloat/src/main/scala/recFNFromFN.scala:48:{15,76}, :50:{23,41}, src/main/scala/bsdf/Multiply.scala:18:21, :22:14, :46:24, :47:12
    .io_out (_mul_io_out)
  );
  assign io_out_valid = busy;	// <stdin>:402:10, src/main/scala/bsdf/Multiply.scala:18:21
  assign io_out_bits = out;	// <stdin>:402:10, src/main/scala/bsdf/Multiply.scala:42:22
endmodule

module MultiplySpectrum(	// <stdin>:665:10
  input         clock,	// <stdin>:666:11
                reset,	// <stdin>:667:11
                input_valid,	// src/main/scala/bsdf/MultiplySpectrum.scala:17:17
  input  [31:0] input_bits_a_values_0,	// src/main/scala/bsdf/MultiplySpectrum.scala:17:17
                input_bits_b_values_0,	// src/main/scala/bsdf/MultiplySpectrum.scala:17:17
  input         output_ready,	// src/main/scala/bsdf/MultiplySpectrum.scala:18:18
  output        output_valid,	// src/main/scala/bsdf/MultiplySpectrum.scala:18:18
  output [31:0] output_bits_out_values_0	// src/main/scala/bsdf/MultiplySpectrum.scala:18:18
);

  wire        _multipliers_multiply_io_out_valid;	// src/main/scala/bsdf/MultiplySpectrum.scala:21:26
  reg         busy;	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21
  reg         resultValid;	// src/main/scala/bsdf/MultiplySpectrum.scala:27:28
  reg  [31:0] a_values_0;	// src/main/scala/bsdf/MultiplySpectrum.scala:28:14
  reg  [31:0] b_values_0;	// src/main/scala/bsdf/MultiplySpectrum.scala:29:14
  wire        _T = output_ready & resultValid;	// src/main/scala/bsdf/MultiplySpectrum.scala:27:28, :45:23
  always @(posedge clock) begin	// <stdin>:666:11
    if (reset) begin	// <stdin>:666:11
      busy <= 1'h0;	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21
      resultValid <= 1'h0;	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :27:28
    end
    else if (busy) begin	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21
      busy <= ~_T & busy;	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :45:{23,39}, :46:12
      resultValid <= ~_T & _multipliers_multiply_io_out_valid;	// src/main/scala/bsdf/MultiplySpectrum.scala:21:26, :26:21, :27:28, :44:17, :45:{23,39}, :46:12, :47:19
    end
    else	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21
      busy <= input_valid | busy;	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :50:23, :60:12
    if (busy | ~input_valid) begin	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :28:14, :40:14, :50:23
    end
    else begin	// src/main/scala/bsdf/MultiplySpectrum.scala:28:14, :40:14, :50:23
      a_values_0 <= input_bits_a_values_0;	// src/main/scala/bsdf/MultiplySpectrum.scala:28:14
      b_values_0 <= input_bits_b_values_0;	// src/main/scala/bsdf/MultiplySpectrum.scala:29:14
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:665:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:665:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:665:10
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;	// <stdin>:665:10
    logic [31:0] _RANDOM_1;	// <stdin>:665:10
    logic [31:0] _RANDOM_2;	// <stdin>:665:10
    initial begin	// <stdin>:665:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:665:10
        `INIT_RANDOM_PROLOG_	// <stdin>:665:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:665:10
        _RANDOM_0 = `RANDOM;	// <stdin>:665:10
        _RANDOM_1 = `RANDOM;	// <stdin>:665:10
        _RANDOM_2 = `RANDOM;	// <stdin>:665:10
        busy = _RANDOM_0[0];	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21
        resultValid = _RANDOM_0[1];	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :27:28
        a_values_0 = {_RANDOM_0[31:2], _RANDOM_1[1:0]};	// src/main/scala/bsdf/MultiplySpectrum.scala:26:21, :28:14
        b_values_0 = {_RANDOM_1[31:2], _RANDOM_2[1:0]};	// src/main/scala/bsdf/MultiplySpectrum.scala:28:14, :29:14
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:665:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:665:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Multiply multipliers_multiply (	// src/main/scala/bsdf/MultiplySpectrum.scala:21:26
    .clock        (clock),
    .reset        (reset),
    .io_a_bits    (a_values_0),	// src/main/scala/bsdf/MultiplySpectrum.scala:28:14
    .io_b_bits    (b_values_0),	// src/main/scala/bsdf/MultiplySpectrum.scala:29:14
    .io_out_valid (_multipliers_multiply_io_out_valid),
    .io_out_bits  (output_bits_out_values_0)
  );
  assign output_valid = resultValid;	// <stdin>:665:10, src/main/scala/bsdf/MultiplySpectrum.scala:27:28
endmodule

module Diffuse(	// <stdin>:718:10
  input         clock,	// <stdin>:719:11
                reset,	// <stdin>:720:11
                input_valid,	// src/main/scala/bsdf/Diffuse.scala:17:17
  input  [31:0] input_bits_reflectance_values_0,	// src/main/scala/bsdf/Diffuse.scala:17:17
  input         output_ready,	// src/main/scala/bsdf/Diffuse.scala:18:18
  output        input_ready,	// src/main/scala/bsdf/Diffuse.scala:17:17
                output_valid,	// src/main/scala/bsdf/Diffuse.scala:18:18
  output [31:0] output_bits_out_values_0	// src/main/scala/bsdf/Diffuse.scala:18:18
);

  wire        _multiplySpectrum_output_valid;	// src/main/scala/bsdf/Diffuse.scala:19:32
  reg         busy;	// src/main/scala/bsdf/Diffuse.scala:22:21
  reg         resultValid;	// src/main/scala/bsdf/Diffuse.scala:23:28
  reg  [31:0] reflectance_values_0;	// src/main/scala/bsdf/Diffuse.scala:24:24
  wire        _T = output_ready & resultValid;	// src/main/scala/bsdf/Diffuse.scala:23:28, :45:26
  wire        _GEN = busy & _multiplySpectrum_output_valid;	// src/main/scala/bsdf/Diffuse.scala:19:32, :22:21, :23:28, :37:14, :43:42, :45:42
  always @(posedge clock) begin	// <stdin>:719:11
    if (reset) begin	// <stdin>:719:11
      busy <= 1'h0;	// src/main/scala/bsdf/Diffuse.scala:22:21
      resultValid <= 1'h0;	// src/main/scala/bsdf/Diffuse.scala:22:21, :23:28
    end
    else begin	// <stdin>:719:11
      if (busy)	// src/main/scala/bsdf/Diffuse.scala:22:21
        busy <= ~(_multiplySpectrum_output_valid & _T) & busy;	// src/main/scala/bsdf/Diffuse.scala:19:32, :22:21, :43:42, :45:{26,42}, :49:14
      else	// src/main/scala/bsdf/Diffuse.scala:22:21
        busy <= input_valid | busy;	// src/main/scala/bsdf/Diffuse.scala:22:21, :54:24, :56:12
      if (_GEN)	// src/main/scala/bsdf/Diffuse.scala:23:28, :37:14, :43:42, :45:42
        resultValid <= ~_T;	// src/main/scala/bsdf/Diffuse.scala:22:21, :23:28, :42:34, :44:19, :45:{26,42}, :47:21
    end
    if (busy | ~input_valid) begin	// src/main/scala/bsdf/Diffuse.scala:22:21, :24:24, :37:14, :54:24
    end
    else	// src/main/scala/bsdf/Diffuse.scala:24:24, :37:14, :54:24
      reflectance_values_0 <= input_bits_reflectance_values_0;	// src/main/scala/bsdf/Diffuse.scala:24:24
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:718:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:718:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:718:10
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;	// <stdin>:718:10
    logic [31:0] _RANDOM_1;	// <stdin>:718:10
    logic [31:0] _RANDOM_2;	// <stdin>:718:10
    initial begin	// <stdin>:718:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:718:10
        `INIT_RANDOM_PROLOG_	// <stdin>:718:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:718:10
        _RANDOM_0 = `RANDOM;	// <stdin>:718:10
        _RANDOM_1 = `RANDOM;	// <stdin>:718:10
        _RANDOM_2 = `RANDOM;	// <stdin>:718:10
        busy = _RANDOM_0[31];	// src/main/scala/bsdf/Diffuse.scala:22:21
        resultValid = _RANDOM_1[0];	// src/main/scala/bsdf/Diffuse.scala:23:28
        reflectance_values_0 = {_RANDOM_1[31:1], _RANDOM_2[0]};	// src/main/scala/bsdf/Diffuse.scala:23:28, :24:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:718:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:718:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  MultiplySpectrum multiplySpectrum (	// src/main/scala/bsdf/Diffuse.scala:19:32
    .clock                    (clock),
    .reset                    (reset),
    .input_valid              (busy),	// src/main/scala/bsdf/Diffuse.scala:22:21
    .input_bits_a_values_0    (reflectance_values_0),	// src/main/scala/bsdf/Diffuse.scala:24:24
    .input_bits_b_values_0    (32'h3EA2F983),	// src/main/scala/bsdf/Diffuse.scala:37:14
    .output_ready             (_GEN & _T),	// src/main/scala/bsdf/Diffuse.scala:23:28, :34:33, :37:14, :43:42, :45:{26,42}, :53:35
    .output_valid             (_multiplySpectrum_output_valid),
    .output_bits_out_values_0 (output_bits_out_values_0)
  );
  assign input_ready = ~busy & input_valid | ~busy;	// <stdin>:718:10, src/main/scala/bsdf/Diffuse.scala:22:21, :26:{15,18}, :37:14, :54:24
  assign output_valid = resultValid;	// <stdin>:718:10, src/main/scala/bsdf/Diffuse.scala:23:28
endmodule

